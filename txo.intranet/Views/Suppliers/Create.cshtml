@model txo.entities.Supplier

@{
    ViewBag.Title = "SUPPLIERS";
}

<div>&nbsp;</div>

<div class="Support-sec">
    <h3>Create</h3>
    <div class="clear"></div>
</div>



@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="container">
        <div class="support-request-section">
            <div class="support-form-sec">

                <ul class="reset">
                    <li class="nametxt1">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control text-box single-line", @placeholder = "Name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </li>

                    <li class="addresstxt1">
                        @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                    </li>

                    <li class="addresstxt1">
                        @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                    </li>

                    <li class="nametxt1">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </li>

                    <li class="nametxt1">

                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </li>

                    <li class="nametxt1">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </li>


                    <li class="nametxt1">
                        @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })

                    </li>


                    <li class="nametxt1">
                        @Html.EditorFor(model => model.TimeZone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TimeZone, "", new { @class = "text-danger" })

                    </li>


                    <li class="nametxt1">
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })

                    </li>


                    <li class="nametxt1">
                        @Html.EditorFor(model => model.Enabled)
                        @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                    </li>


                    <li class="nametxt1">
                        @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                    </li>

                    <li class="nametxt1">
                        @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
                    </li>

                











                    <li>

                        <select class="reason" id="Reason" name="Reason">
                            <option value="">Reason for contacting</option>
                            <option value="Delivery">Delivery Problem</option>
                            <option value="Product">Problem with Product</option>
                            <option value="TechSupport">Technical Support</option>
                            <option value="Other">Other</option>
                        </select>
                    </li>
                    <li class="nametxt1">
                        <input class="form-control text-box single-line" id="Name" name="Name" placeholder="Name" value="" type="text">
                    </li>
                    <li>
                        <input class="purchased text-box single-line" id="Email" name="Email" placeholder="Email Address" value="" type="text">
                    </li>
                    <li>
                        <input class="purchased text-box single-line" id="Store" name="Store" placeholder="Where Purchased?" value="" type="text">
                    </li>
                    <li class="orderid">
                        <input class="nametxt text-box single-line" id="OrderID" name="OrderID" placeholder="Order ID" value="" type="text">
                    </li>
                    <li class="tracking">
                        <input class="nametxt text-box single-line" id="TrackingNumber" name="TrackingNumber" placeholder="Tracking Number" value="" type="text">
                    </li>
                    <li class="info">
                        <textarea cols="20" htmlattributes="{ placeholder = Information }" id="Body" name="Body" rows="2"></textarea>
                    </li>
                    <li class="send1">
                        <input type="submit" value="Create" class="btn btn-default"/>
                    </li>
                    @Html.ActionLink("Back to List", "Index")


                </ul>
                <div class="clear"></div>
            </div>
        </div>
    </div>

    }






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
